<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-22T22:08:25 WIB" name="API Automation Suite" finished-at="2025-10-22T22:08:31 WIB" duration-ms="5931">
    <groups>
    </groups>
    <test started-at="2025-10-22T22:08:25 WIB" name="API Tests" finished-at="2025-10-22T22:08:31 WIB" duration-ms="5931">
      <class name="tests.PositiveTests">
        <test-method signature="testCreateUserSuccessfully()[pri:0, instance:tests.PositiveTests@710f4dc7]" started-at="2025-10-22T22:08:25 WIB" name="testCreateUserSuccessfully" finished-at="2025-10-22T22:08:28 WIB" duration-ms="2422" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected status 201 Created expected [201] but found [401]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected status 201 Created expected [201] but found [401]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at tests.PositiveTests.testCreateUserSuccessfully(PositiveTests.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at tests.TestRunner.main(TestRunner.java:27)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserSuccessfully -->
        <test-method signature="testGetExistingUser()[pri:0, instance:tests.PositiveTests@710f4dc7]" started-at="2025-10-22T22:08:28 WIB" name="testGetExistingUser" finished-at="2025-10-22T22:08:29 WIB" duration-ms="1031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetExistingUser -->
      </class> <!-- tests.PositiveTests -->
      <class name="tests.NegativeTests">
        <test-method signature="testCreateUserWithEmptyBody()[pri:0, instance:tests.NegativeTests@24313fcc]" started-at="2025-10-22T22:08:29 WIB" name="testCreateUserWithEmptyBody" finished-at="2025-10-22T22:08:29 WIB" duration-ms="422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserWithEmptyBody -->
        <test-method signature="testGetNonExistingUser()[pri:0, instance:tests.NegativeTests@24313fcc]" started-at="2025-10-22T22:08:29 WIB" name="testGetNonExistingUser" finished-at="2025-10-22T22:08:30 WIB" duration-ms="483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistingUser -->
      </class> <!-- tests.NegativeTests -->
      <class name="tests.BoundaryTests">
        <test-method signature="testGetUserWithIdZero()[pri:0, instance:tests.BoundaryTests@7d20d0b]" started-at="2025-10-22T22:08:30 WIB" name="testGetUserWithIdZero" finished-at="2025-10-22T22:08:30 WIB" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserWithIdZero -->
        <test-method signature="testGetUserWithMaxIntId()[pri:0, instance:tests.BoundaryTests@7d20d0b]" started-at="2025-10-22T22:08:30 WIB" name="testGetUserWithMaxIntId" finished-at="2025-10-22T22:08:31 WIB" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserWithMaxIntId -->
        <test-method signature="testGetUserWithNegativeId()[pri:0, instance:tests.BoundaryTests@7d20d0b]" started-at="2025-10-22T22:08:31 WIB" name="testGetUserWithNegativeId" finished-at="2025-10-22T22:08:31 WIB" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserWithNegativeId -->
      </class> <!-- tests.BoundaryTests -->
    </test> <!-- API Tests -->
  </suite> <!-- API Automation Suite -->
</testng-results>
